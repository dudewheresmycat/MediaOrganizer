/*
	Project Name: Tunes Escape
	--------------------------------------------------------------
	Project Short Description: 
	Jake and Gabe's; Modular Music Media Organizer and Player.
	--------------------------------------------------------------
	Project Long Description: A database of the names of music files 
	including information on each track and its file path. The GUI will
	include a tableview and buttons to sort the media in different 
	orders, also textAreas for playlists. Also, will include a 
	button/function to play the selected file in an external media 
	player (windows media player). With more time an embedded codex 
	might become an added feature.
	--------------------------------------------------------------
	Features:
	+TableView to see all files in the database
	+Custom sorting buttons
	+Buttons to add/delete/modify files
	+Feature to launch the media file with an external player
	+Feature to change the styling of the GUI (re-skin)
	+Feature to track play count
	+Embedded media playing
	--------------------------------------------------------------
	Work distribution:
	--------------------------------------------------------------
	Jake:
	- utility class with methods
	- Provide media files for the database
	- Manage class interfacing
	- Database initial setup
	- String tokenizing and array management
	- Create/catch/handle exceptions
	Gabe:
	- Connect database
	- Media player
	- Naming of program and classes
	- Create tableview GUI elements, GUI features
	- Implement utility classes
	--------------------------------------------------------------
	Timeline:
	--------------------------------------------------------------
	Week 1: create database and folder for media files, outline the classes 
	and generate method stubs
	Week 2: Create the GUI, work on controller class, create custom exception
	Week 3: Implement classes and interfaces, handle all exceptions
	Final Draft: Bug testing, link program to launch media
	*/